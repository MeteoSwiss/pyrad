name: Test pyrad ARM
env:
  MINIMAL_DEPENDENCIES: cython numpy scipy dask netCDF4
  OPTIONAL_DEPENDENCIES: pyfftw cartopy h5py PyWavelets pandas scikit-image
  TEST_DEPENDENCIES: pytest pytest-cov

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  unit_tests:
    name: Unit Tests (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.7", "3.8", "3.9"]
      max-parallel: 6

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2
        with:
         submodules: recursive
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Clone pyart
        uses: actions/checkout@master
        with:
          repository: ARM-DOE/pyart 
          path: pyart
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          channel-priority: flexible
          activate-environment: test-environment

      - name: Install dependencies
        env:
          PACKAGES: ${{env.MINIMAL_DEPENDENCIES}} ${{env.OPTIONAL_DEPENDENCIES}} ${{env.TEST_DEPENDENCIES}}
          PYRAD_EXAMPLES_PATH: ${{github.workspace}}/pyrad-examples/
        run: |
          conda install --quiet ${{env.PACKAGES}}
          pip install -U cookiecutter
      - name: Install pyart
        working-directory:  ${{github.workspace}}/pyart/
        run: pip install .
      - name: Install pyrad
        if: matrix.os != 'macos-latest'
        working-directory: ${{github.workspace}}/src/pyrad_proc/
        run: pip install .
      - name: Download pyrad-examples
        env:
          PYRAD_EXAMPLES_PATH: ${{github.workspace}}/pyrad-examples/
        working-directory: ${{github.workspace}}/ci
        run: python fetch_pyrad_examples.py

      - name: Check imports
        working-directory: ${{github.workspace}}/pyrad-examples/
        run: |
          python -c "import pyrad; print(pyrad.__file__)"
          python -c "from pyrad.flow import main"
      - name: Run tests
        env:
           PYRAD_EXAMPLES_PATH: ${{github.workspace}}/pyrad-examples/
        working-directory: ${{github.workspace}}/src/pyrad_proc/tests/
        run: pytest run_tests_arm.py

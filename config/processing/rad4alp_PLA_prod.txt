#
# Product generation configuration
#

# List of datasets to generate.
# The detailed specification of each dataset is given below.
dataSetList STRARR 1
    Zh
    
    
#	l0:SNRh
#	l1:RhoHV
#    l2:echoID
#    l3:echoFilter
#	l4:SNRFilter
#	l5:PhiDPc_smooth2w
#	l6:KDPc
#	l7:Att_ZPhi
#	l8:hydroclass
#	l9:dBZ_avg
#	l9:dBZv_avg
#	l9:PhiDP_avg
#	l9:flag_avg


# ==========================================================================================
#                 raw data products
# ==========================================================================================
Zh STRUCT 3
    type STRING RAW
    datatype STRARR 1
        RAD4ALP:dBZ
    products STRUCT 1
        EL001_0 STRUCT 3
            type  STRING PPI_IMAGE
            anglenr INT 2
            voltype STRING dBZ
            
uPhiDP STRUCT 3
    type STRING RAW
    datatype STRARR 1
        RAD4ALP:uPhiDP
    products STRUCT 1
        EL001_0 STRUCT 3
            type  STRING PPI_IMAGE
            anglenr INT 2
            voltype STRING uPhiDP
            
uRhoHV STRUCT 3
    type STRING RAW
    datatype STRARR 1
        RAD4ALP:uRhoHV
    products STRUCT 1
        EL001_0 STRUCT 3
            type  STRING PPI_IMAGE
            anglenr INT 2
            voltype STRING uRhoHV
            
ZDR STRUCT 3
    type STRING RAW
    datatype STRARR 1
        RAD4ALP:ZDR
    products STRUCT 1
        EL001_0 STRUCT 3
            type  STRING PPI_IMAGE
            anglenr INT 2
            voltype STRING ZDR
            
V STRUCT 3
    type STRING RAW
    datatype STRARR 1
        RAD4ALP:V
    products STRUCT 1
        EL001_0 STRUCT 3
            type  STRING PPI_IMAGE
            anglenr INT 2
            voltype STRING V
            
W STRUCT 3
    type STRING RAW
    datatype STRARR 1
        RAD4ALP:W
    products STRUCT 1
        EL001_0 STRUCT 3
            type  STRING PPI_IMAGE
            anglenr INT 2
            voltype STRING W
    

## ==========================================================================================
##                 secondary moments products
## ==========================================================================================
#SNRh STRUCT 4
#    type STRING SNR
#    datatype STRARR 2
#        RAD4ALP:dBZ
#        RAD4ALP:Nh
#    output_type STRING SNRh
#    MAKE_GLOBAL INT 1
#	
#	
#RhoHV STRUCT 3
#    type STRING RHOHV_CORRECTION
#    datatype STRARR 5
#        RAD4ALP:uRhoHV
#        RAD4ALP:ZDR
#        RAD4ALP:Nh
#        RAD4ALP:Nv
#        PROC:SNRh
#    MAKE_GLOBAL INT 1
#
#

# ==========================================================================================
#                 COSMO products
# ==========================================================================================
#TEMP_RAW STRUCT 5
#    type STRING COSMO
#    datatype STRARR 1
#        RAD4ALP:dBZ
#    cosmo_type STRING TEMP
#    keep_in_memory INT 1
#    products STRUCT 1        
#        EL001_0 STRUCT 3
#            type  STRING PPI_IMAGE
#            anglenr INT 2
#            voltype STRING TEMP
#            
#TEMP_RAW2 STRUCT 6
#    type STRING COSMO_LOOKUP
#    datatype STRARR 1
#        RAD4ALP:dBZ        
#    cosmo_type STRING TEMP
#    regular_grid INT 1
#    lookup_table INT 1
#    products STRUCT 1        
#        EL001_0 STRUCT 3
#            type  STRING PPI_IMAGE
#            anglenr INT 2
#            voltype STRING TEMP
#            
WIND_RAW STRUCT 5
    type STRING COSMO
    datatype STRARR 1
        RAD4ALP:dBZ
    cosmo_type STRING WIND
    keep_in_memory INT 1
    products STRUCT 2
        EL001_0_SPEED STRUCT 3
            type  STRING PPI_IMAGE
            anglenr INT 2
            voltype STRING WIND_SPEED
        EL001_0_DIR STRUCT 3
            type  STRING PPI_IMAGE
            anglenr INT 2
            voltype STRING WIND_DIRECTION
            
WIND_RAW2 STRUCT 6
    type STRING COSMO_LOOKUP
    datatype STRARR 1
        RAD4ALP:dBZ
    cosmo_type STRING WIND
    regular_grid INT 1
    lookup_table INT 1    
    products STRUCT 2
        EL001_0_SPEED STRUCT 3
            type  STRING PPI_IMAGE
            anglenr INT 2
            voltype STRING WIND_SPEED
        EL001_0_DIR STRUCT 3
            type  STRING PPI_IMAGE
            anglenr INT 2
            voltype STRING WIND_DIRECTION
            
RAD2COSMO STRUCT 3
    type STRING COSMO_COORD
    datatype STRARR 1
        dBZ        
    products STRUCT 1        
        rad2cosmo STRUCT 2
            type  STRING SAVEVOL            
            voltype STRING cosmo_index
            
## ==========================================================================================
##                 echo identification
## ==========================================================================================
#echoID STRUCT 3
#   type STRING SAN
#   datatype STRARR 4      
#      RAD4ALP:dBZ
#      RAD4ALP:ZDR
#      RAD4ALP:uPhiDP
#      PROC:RhoHV
#   MAKE_GLOBAL INT 1
#
#
## ==========================================================================================
##                 clutter and noise suppression
## ==========================================================================================
## echo type 3 : precip, 2 : clutter, 1 : noise
#echoFilter STRUCT 4
#   type STRING ECHO_FILTER
#   datatype STRARR 6
#      PROC:echoID
#      RAD4ALP:dBZ
#	  RAD4ALP:dBZv
#	  RAD4ALP:ZDR
#	  PROC:RhoHV
#      RAD4ALP:uPhiDP
#   echo_type INT 3
#   MAKE_GLOBAL INT 1
#
#
## ==========================================================================================
##                 filtration based on SNR
## ==========================================================================================
#SNRFilter STRUCT 4
#   type STRING SNR_FILTER
#   datatype STRARR 2
#      PROC:SNRh
#      PROC:PhiDPc
#   SNRmin FLOAT 10.
#   MAKE_GLOBAL INT 1
#   
#
## ==========================================================================================
##                 PHIDP processing
## ==========================================================================================   
#PhiDPc_smooth2w STRUCT 11
#    type STRING PHIDP_SMOOTH_2W
#    datatype STRARR 2
#        PROC:PhiDPc
#        PROC:dBZc
#    rmin FLOAT 1000.
#    rmax FLOAT 50000.
#    rcell FLOAT 1000.
#    Zmin FLOAT 20.
#    Zmax FLOAT 40.
#    rwinds FLOAT 1000.
#    rwindl FLOAT 3000.
#    Zthr FLOAT 40.    
#    MAKE_GLOBAL INT 1
#	
#	
## ==========================================================================================
##                 KDP processing
## ==========================================================================================   
#KDPc STRUCT 6
#    type STRING KDP_LEASTSQUARE_2W
#    datatype STRARR 2
#        PROC:PhiDPc
#        PROC:dBZc
#    rwinds FLOAT 1000.
#    rwindl FLOAT 3000.
#    Zthr FLOAT 40.    
#    MAKE_GLOBAL INT 1
#
#
## ==========================================================================================
##                 Attenuation
## ==========================================================================================
#Att_ZPhi STRUCT 4
#	type STRING ATTENUATION
#	datatype STRARR 4
#        PROC:dBZc
#        PROC:ZDRc
#        PROC:PhiDPc
#        RAD4ALPCOSMO:TEMP    
#    MAKE_GLOBAL INT 1
#    ATT_METHOD STRING ZPhi
#	
#	
## ==========================================================================================
##                 hydrometeor classification products
## ==========================================================================================
#hydroclass STRUCT 6
#   type STRING HYDROCLASS
#   datatype STRARR 5
#      PROC:dBZc
#	  PROC:ZDRc
#	  PROC:RhoHVc
#	  PROC:KDPc
#	  RAD4ALPCOSMO:TEMP
#   HYDRO_METHOD STRING SEMISUPERVISED
#   RADARCENTROIDS STRING A
#   MAKE_GLOBAL INT 1
#   products STRUCT 1
# 	  EL001_0 STRUCT 3
#         type   STRING PPI_IMAGE
#         voltype STRING hydro
# 		 anglenr INT 2
#
#
## ==========================================================================================
##                 temporal average
## ==========================================================================================         
#dBZ_avg STRUCT 6
#   type     STRING TIME_AVG
#   datatype STRARR 1
#      PROC:dBZc
#   start_average FLOAT 0.
#   period FLOAT 3600.
#   lin_trans INT 1
#   products STRUCT 2      
#      EL001_0 STRUCT 3
#         type  STRING PPI_IMAGE
#         anglenr INT 2
#         voltype STRING dBZc
#      SAVEVOL STRUCT 2
#         type  STRING SAVEVOL
#         voltype STRING dBZc
#		 
#dBZv_avg STRUCT 6
#   type     STRING TIME_AVG
#   datatype STRARR 1
#      PROC:dBZvc
#   start_average FLOAT 0.
#   period FLOAT 3600.
#   lin_trans INT 1
#   products STRUCT 2      
#      EL001_0 STRUCT 3
#         type  STRING PPI_IMAGE
#         anglenr INT 2
#         voltype STRING dBZvc
#      SAVEVOL STRUCT 2
#         type  STRING SAVEVOL
#         voltype STRING dBZvc
#         
#PhiDP_avg STRUCT 5
#   type     STRING WEIGHTED_TIME_AVG
#   datatype STRARR 2
#      PROC:dBZc
#      PROC:PhiDPc
#   start_average FLOAT 0.
#   period FLOAT 3600.
#   products STRUCT 2      
#      EL001_0 STRUCT 3
#         type  STRING PPI_IMAGE
#         anglenr INT 2
#         voltype STRING PhiDPc
#      SAVEVOL STRUCT 2
#         type  STRING SAVEVOL
#         voltype STRING PhiDPc
#
#flag_avg STRUCT 6
#   type     STRING FLAG_TIME_AVG
#   datatype STRARR 3
#      PROC:PhiDPc
#      PROC:echoID
#	  PROC:hydro
#   start_average FLOAT 0.
#   period FLOAT 3600.
#   phidpmax FLOAT 60.
#   products STRUCT 2      
#      EL001_0 STRUCT 3
#         type  STRING PPI_IMAGE
#         anglenr INT 2
#         voltype STRING time_avg_flag
#      SAVEVOL STRUCT 2
#         type  STRING SAVEVOL
#         voltype STRING time_avg_flag
		 